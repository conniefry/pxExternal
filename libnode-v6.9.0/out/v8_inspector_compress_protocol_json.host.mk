# This file is generated by gyp; do not edit.

TOOLSET := host
TARGET := v8_inspector_compress_protocol_json
### Rules for action "v8_inspector_compress_protocol_json":
quiet_cmd__Users_johnrobinson_Documents_npxcore_pxCore_examples_pxScene2d_external_libnode_v6_9_0_node_gyp_v8_inspector_compress_protocol_json_host_v8_inspector_compress_protocol_json = ACTION _Users_johnrobinson_Documents_npxcore_pxCore_examples_pxScene2d_external_libnode_v6_9_0_node_gyp_v8_inspector_compress_protocol_json_host_v8_inspector_compress_protocol_json $@
cmd__Users_johnrobinson_Documents_npxcore_pxCore_examples_pxScene2d_external_libnode_v6_9_0_node_gyp_v8_inspector_compress_protocol_json_host_v8_inspector_compress_protocol_json = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p $(obj)/gen; python tools/compress_json.py deps/v8_inspector/third_party/v8_inspector/platform/v8_inspector/js_protocol.json "$(obj)/gen/v8_inspector_protocol_json.h"

$(obj)/gen/v8_inspector_protocol_json.h: obj := $(abs_obj)
$(obj)/gen/v8_inspector_protocol_json.h: builddir := $(abs_builddir)
$(obj)/gen/v8_inspector_protocol_json.h: export BUILT_PRODUCTS_DIR := ${abs_builddir}
$(obj)/gen/v8_inspector_protocol_json.h: export CONFIGURATION := ${BUILDTYPE}
$(obj)/gen/v8_inspector_protocol_json.h: export PRODUCT_NAME := v8_inspector_compress_protocol_json
$(obj)/gen/v8_inspector_protocol_json.h: export SDKROOT := /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk
$(obj)/gen/v8_inspector_protocol_json.h: export SRCROOT := ${abs_srcdir}/
$(obj)/gen/v8_inspector_protocol_json.h: export SOURCE_ROOT := ${SRCROOT}
$(obj)/gen/v8_inspector_protocol_json.h: export TARGET_BUILD_DIR := ${abs_builddir}
$(obj)/gen/v8_inspector_protocol_json.h: export TEMP_DIR := ${TMPDIR}
$(obj)/gen/v8_inspector_protocol_json.h: TOOLSET := $(TOOLSET)
$(obj)/gen/v8_inspector_protocol_json.h: $(srcdir)/deps/v8_inspector/third_party/v8_inspector/platform/v8_inspector/js_protocol.json FORCE_DO_CMD
	$(call do_cmd,_Users_johnrobinson_Documents_npxcore_pxCore_examples_pxScene2d_external_libnode_v6_9_0_node_gyp_v8_inspector_compress_protocol_json_host_v8_inspector_compress_protocol_json)

all_deps += $(obj)/gen/v8_inspector_protocol_json.h
action__Users_johnrobinson_Documents_npxcore_pxCore_examples_pxScene2d_external_libnode_v6_9_0_node_gyp_v8_inspector_compress_protocol_json_host_v8_inspector_compress_protocol_json_outputs := $(obj)/gen/v8_inspector_protocol_json.h


DEFS_Debug := \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++0x \
	-fno-rtti \
	-fno-exceptions \
	-fno-threadsafe-statics \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug :=

DEFS_Release := \
	'-D_DARWIN_USE_64_BIT_INODE=1'

# Flags passed to all source files.
CFLAGS_Release := \
	-Os \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++0x \
	-fno-rtti \
	-fno-exceptions \
	-fno-threadsafe-statics \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release :=

OBJS :=

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our actions/rules run before any of us.
$(OBJS): | $(action__Users_johnrobinson_Documents_npxcore_pxCore_examples_pxScene2d_external_libnode_v6_9_0_node_gyp_v8_inspector_compress_protocol_json_host_v8_inspector_compress_protocol_json_outputs)


### Rules for final target.
# Build our special outputs first.
$(obj).host/v8_inspector_compress_protocol_json.stamp: | $(action__Users_johnrobinson_Documents_npxcore_pxCore_examples_pxScene2d_external_libnode_v6_9_0_node_gyp_v8_inspector_compress_protocol_json_host_v8_inspector_compress_protocol_json_outputs)

# Preserve order dependency of special output on deps.
$(action__Users_johnrobinson_Documents_npxcore_pxCore_examples_pxScene2d_external_libnode_v6_9_0_node_gyp_v8_inspector_compress_protocol_json_host_v8_inspector_compress_protocol_json_outputs): | 

$(obj).host/v8_inspector_compress_protocol_json.stamp: TOOLSET := $(TOOLSET)
$(obj).host/v8_inspector_compress_protocol_json.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).host/v8_inspector_compress_protocol_json.stamp
# Add target alias
.PHONY: v8_inspector_compress_protocol_json
v8_inspector_compress_protocol_json: $(obj).host/v8_inspector_compress_protocol_json.stamp

# Add target alias to "all" target.
.PHONY: all
all: v8_inspector_compress_protocol_json

